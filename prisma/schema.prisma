generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum SlipType {
  BOOK
  THOUGHT
  MEDIA
}

model Workspace {
  id     String @id @default(uuid())
  name   String
  userId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Slip      Slip[]
  Note      Note[]
}

model Slip {
  id        String   @id @default(uuid())
  title     String?
  content   String   @db.Text
  reference String?  @db.Text
  type      SlipType

  userId String

  workspaceId String
  workspace   Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Note      Note[]

  @@index([workspaceId])
}

model Note {
  id      String  @id @default(uuid())
  title   String  @default("Untitled") @db.Text
  content String? @db.Text

  tags NoteTags[]

  slipId String?
  slip   Slip?   @relation(fields: [slipId], references: [id])

  workspaceId String
  workspace   Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([slipId, workspaceId])
}

model NoteTags {
  id     String  @id @default(uuid())
  noteId String?
  Note   Note?   @relation(fields: [noteId], references: [id])
  Tag    Tag?    @relation(fields: [tagId], references: [id])
  tagId  String?
}

model Tag {
  id    String     @id @default(uuid())
  name  String     @unique
  notes NoteTags[]
}
